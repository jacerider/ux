<?php

/**
 * @file
 * Contains ux_form.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Markup;

/**
 * Implements hook_preprocess_select().
 */
function ux_form_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (ux_form_access()) {
    $form['#attached']['library'][] = 'ux_form/ux_form';
    $form['#attributes']['class'][] = 'ux-form';
  }
}

/**
 * Check if ux_form should be used.
 *
 * @return boolean
 *   Returns TRUE if ux_form should be used.
 */
function ux_form_access() {
  $status = &drupal_static(__FUNCTION__);
  if (!isset($status)) {
    $status = FALSE;
    $active_theme = \Drupal::theme()->getActiveTheme()->getName();
    $themes = \Drupal::config('ux_form.settings')->get('themes');
    if (isset($themes[$active_theme])) {
      $status = TRUE;
    }
  }
  return $status;
}

/**
 * Implements hook_element_info_alter().
 */
function ux_form_element_info_alter(&$type) {
  $input_elements = ['textfield', 'textarea', 'number', 'tel', 'url', 'email', 'password', 'date'];
  foreach ($input_elements as $input_element) {
    if (isset($type[$input_element])) {
      $type[$input_element]['#process'][] = 'ux_form_input_process';
    }
  }

  $input_elements = ['radio', 'radios'];
  foreach ($input_elements as $input_element) {
    if (isset($type[$input_element])) {
      $type[$input_element]['#process'][] = 'ux_form_radio_process';
    }
  }

  $input_elements = ['checkbox', 'checkboxes'];
  foreach ($input_elements as $input_element) {
    if (isset($type[$input_element])) {
      $type[$input_element]['#process'][] = 'ux_form_checkbox_process';
    }
  }

  if (isset($type['select'])) {
    $type['select']['#process'][] = 'ux_form_select_process';
  }

  if (isset($type['date'])) {
    $type['date']['#process'][] = 'ux_form_date_process';
  }

  if (isset($type['datetime'])) {
    $type['datetime']['#process'][] = 'ux_form_datetime_process';
  }

  if (isset($type['managed_file'])) {
    $type['managed_file']['#process'][] = 'ux_form_managed_file_process';
  }
}

/**
 * Process input elements.
 */
function ux_form_input_process(&$element, FormStateInterface $form_state, &$complete_form) {
  if (ux_form_access()) {
    $type = $element['#type'];
    $element['#wrapper_attributes']['class'][] = 'ux-form-input';
    $element['#attributes']['class'][] = 'ux-form-input-item';
    $element['#attached']['library'][] = 'ux_form/ux_form.input';
    if ($type == 'textarea' && (!empty($element['#allowed_formats']) || !empty($element['#format']))) {
      $element['#wrapper_attributes']['class'][] = 'ux-form-format';
      $element['#wrapper_attributes']['class'][] = 'force-active';
    }
  }
  return $element;
}

/**
 * Process radio elements.
 */
function ux_form_radio_process(&$element, FormStateInterface $form_state, &$complete_form) {
  if (ux_form_access()) {
    $type = $element['#type'];
    $element['#wrapper_attributes']['class'][] = 'ux-form-radio';
    $element['#attached']['library'][] = 'ux_form/ux_form.radio';
    if ($type == 'radio') {
      if (!empty($element['#title'])) {
        $element['#title'] = '<div class="ux-ripple"></div>' . $element['#title'];
      }
    }
    if ($type == 'radios') {
      $element['#attributes']['class'][] = 'ux-form-radios';
    }
  }
  return $element;
}

/**
 * Process checkbox elements.
 */
function ux_form_checkbox_process(&$element, FormStateInterface $form_state, &$complete_form) {
  if (ux_form_access()) {
    $type = $element['#type'];
    $element['#wrapper_attributes']['class'][] = 'ux-form-checkbox';
    $element['#attached']['library'][] = 'ux_form/ux_form.checkbox';
    if ($type == 'checkbox') {
      if (!empty($element['#title'])) {
        $element['#title'] = '<div class="ux-ripple"></div>' . $element['#title'];
      }
    }
    if ($type == 'checkboxes') {
      $element['#attributes']['class'][] = 'ux-form-checkboxes';
    }
  }
  return $element;
}

/**
 * Process select elements.
 */
function ux_form_select_process(&$element, FormStateInterface $form_state, &$complete_form) {
  if (ux_form_access()) {
    $element['#wrapper_attributes']['class'][] = 'ux-form-select';
    $element['#attached']['library'][] = 'ux_form/ux_form.select';
    if (isset($element['#multiple']) && $element['#multiple']) {
      $element['#attached']['library'][] = 'ux_form/ux_form.checkbox';
    }
  }
  return $element;
}

/**
 * Process date elements.
 */
function ux_form_date_process(&$element, FormStateInterface $form_state, &$complete_form) {
  if (ux_form_access()) {
    $element['#wrapper_attributes']['class'][] = 'ux-form-date';
    if (!empty($element['#attached']['library'])) {
      $element['#attached']['library'] = array_filter($element['#attached']['library'], function ($library) {
        return $library !== 'core/drupal.date';
      });
      $element['#attached']['library'][] = 'ux_form/ux_form.date';
    }
  }
  return $element;
}

/**
 * Process datetime elements.
 */
function ux_form_datetime_process(&$element, FormStateInterface $form_state, &$complete_form) {
  if (ux_form_access()) {
    $element['#wrapper_attributes']['class'][] = 'ux-form-time';
    $element['#theme_wrappers'] = ['form_element'];
    $element['#attributes']['class'][] = 'ux-form-inline';
    $element['#attached']['library'][] = 'ux_form/ux_form.time';
    $element['date']['#attributes']['placeholder'] = t('Date');
    $element['time']['#attributes']['placeholder'] = t('Time');
  }
  return $element;
}

/**
 * Process file elements.
 */
function ux_form_managed_file_process(&$element, FormStateInterface $form_state, &$complete_form) {
  if (ux_form_access()) {
    $element['#wrapper_attributes']['class'][] = 'ux-form-file';
    $element['#attached']['library'][] = 'ux_form/ux_form.file';
  }
  return $element;
}
