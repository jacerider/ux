{"version":3,"sources":["ux_form/dev/scss/base/_global.scss","dev/scss/base/_variables.scss","ux_form/dev/scss/base/_mixins.scss","ux_form/dev/scss/base/_variables.scss","dev/scss/util/_breakpoint.scss","ux_form/dev/scss/components/_button.scss","ux_form/dev/scss/components/_checkbox.scss","ux_form/dev/scss/components/_datetime.scss","ux_form/dev/scss/components/_entity-meta.scss","ux_form/dev/scss/components/_input.scss","ux_form/dev/scss/components/_password.scss","ux_form/dev/scss/components/_radio.scss","ux_form/dev/scss/components/_select.scss","ux_form/dev/scss/components/_table.scss","ux_form/dev/scss/components/_text-format.scss","ux_form/dev/scss/components/_wrapper.scss","ux_form/dev/scss/modules/_commerce.scss","ux_form/dev/scss/elements/_address.scss","ux_form/dev/scss/elements/_double-field.scss","ux_form/dev/scss/elements/_escort.scss","ux_form/dev/scss/elements/_fieldception.scss"],"names":[],"mappings":"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","file":"ux-form.css","sourcesContent":[".ux-form {\n  font-size: $global-font-size;\n\n  // Many themes put margin and padding here. We don't want that.\n  .form-item {\n    padding: 0;\n    margin: 0;\n  }\n\n  .ux-form-element {\n    margin-top: $global-margin;\n    margin-bottom: $global-margin;\n\n    label,\n    .fieldgroup .fieldset-legend {\n      @include label;\n    }\n\n    .description {\n      @include description;\n    }\n  }\n\n  // Widgets are ux-form-elements that wrap a FAPI field.\n  .ux-form-widget {\n\n    .ux-form-element {\n\n      &:first-child {\n        margin-top: 0;\n      }\n\n      &:last-child,\n      &.ux-for-element-last {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  // May have side-effects but currently used to keep margins consistant.\n  .form-wrapper {\n\n    > .ux-form-element {\n\n      &:first-child {\n        margin-top: 0;\n      }\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  .ux-form-element-float {\n    margin-top: $global-margin + $label-height;\n    margin-bottom: $global-margin;\n  }\n\n  .ux-form-element-inner {\n    position: relative;\n\n    &:after {\n      content: '';\n      display: table;\n      clear: both;\n    }\n  }\n\n  label.form-required, // sass-lint:disable-line no-qualifying-elements\n  .required label,\n  .required .fieldset-legend {\n\n    &:after {\n      content: '*';\n      display: inline-block;\n      padding-left: rem-calc(3);\n      font-size: 13px;\n    }\n  }\n\n  .field-error {\n    @include error;\n  }\n\n  .ux-ripple {\n    @include ux-ripple;\n  }\n\n  ::-webkit-input-placeholder {\n    @include placeholder;\n  }\n\n  :-moz-placeholder {\n    @include placeholder;\n  }\n\n  ::-moz-placeholder {\n    @include placeholder;\n  }\n\n  :-ms-input-placeholder {\n    @include placeholder;\n  }\n\n  ::placeholder {\n    @include placeholder;\n  }\n}\n\n.ux-form-inline {\n\n  @include breakpoint(large) {\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: flex-end;\n    width: 100%;\n\n    > .ux-form-element {\n      flex-grow: 1;\n      flex-shrink: 1;\n      flex-basis: auto;\n      margin: 0;\n      // Needed for IE but ignored.\n      width: rem-calc(100);\n\n      &.ux-form-element-type-actions {\n        flex-grow: 0;\n        width: auto;\n      }\n    }\n\n    .fieldset-wrapper {\n      display: flex !important; /* stylelint-disable-line declaration-no-important */\n      flex-flow: row nowrap;\n\n      .ux-form-container {\n        flex: auto !important; /* stylelint-disable-line declaration-no-important */\n        width: 100%;\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n/// Globals\n////////////////////////////////////////////////////////////////////////////////\n$global-margin: rem-calc(20);\n$global-padding: rem-calc(20);\n$global-font-size: rem-calc(16);\n$global-speed: 350ms;\n","@mixin label() {\n  display: block;\n  font-size: $label-font-size;\n  line-height: $label-height;\n  // height: $label-height;\n  font-weight: normal;\n  text-transform: none;\n  padding: 0 0 3px;\n  margin: 0;\n}\n\n@mixin label-float() {\n  @include label;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: translateY($label-height * -1);\n}\n\n@mixin label-overlay() {\n  @include label-float;\n  line-height: $input-height;\n  font-size: $input-font-size;\n  height: $input-height;\n  padding: $input-padding;\n  pointer-events: none;\n  transform: translateY(0);\n}\n\n@mixin error() {\n  display: block;\n  padding: rem-calc(5 10);\n  font-size: $message-font-size;\n  line-height: $label-font-size;\n  text-transform: uppercase;\n  text-rendering: optimizeLegibility;\n  z-index: 10;\n  margin: $global-margin * 0.5 0;\n}\n\n@mixin description() {\n  font-size: $description-font-size;\n  margin: 0;\n  padding: 0;\n}\n\n@mixin placeholder() {\n  font-style: italic;\n  font-weight: 500;\n  opacity: 1 !important; /* stylelint-disable-line declaration-no-important */\n}\n\n@mixin wrapper-label() {\n  display: block;\n  font-size: $wrapper-font-size;\n  line-height: $wrapper-height;\n  // height: $wrapper-height;\n  margin: 0;\n  padding: 0;\n  font-weight: 700;\n  text-transform: uppercase;\n  text-align: left;\n}\n\n@mixin wrapper-description() {\n  font-size: $wrapper-description-font-size;\n  font-weight: 300;\n  margin: 0;\n  padding: rem-calc(5 0 0);\n}\n\n@mixin ux-ripple() {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    transform: scale(1.5, 1.5);\n    opacity: 0;\n    overflow: hidden;\n    transition: transform 0.5s, opacity 1s;\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    transform: scale(0, 0);\n    opacity: 0;\n    overflow: hidden;\n    transition: transform 0.5s, opacity 1s;\n  }\n}\n\n@mixin ux-ripple-active() {\n\n  &:before {\n    transform: scale(0, 0);\n    opacity: 0.2;\n    transition: 0s;\n  }\n}\n\n@mixin ux-ripple-focus() {\n\n  &:after {\n    opacity: 0.15;\n    transform: scale(0.75, 0.75);\n    transition: 0s;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n/// Wrapper\n////////////////////////////////////////////////////////////////////////////////\n$wrapper-height: rem-calc(18);\n$wrapper-font-size: rem-calc(18);\n$wrapper-description-font-size: rem-calc(16);\n\n////////////////////////////////////////////////////////////////////////////////\n/// Labels\n////////////////////////////////////////////////////////////////////////////////\n$label-height: rem-calc(20);\n$label-font-size: rem-calc(14);\n$label-transform: translateY($label-height * -1);\n\n////////////////////////////////////////////////////////////////////////////////\n/// Description\n////////////////////////////////////////////////////////////////////////////////\n$description-font-size: rem-calc(14);\n\n////////////////////////////////////////////////////////////////////////////////\n/// Inputs\n////////////////////////////////////////////////////////////////////////////////\n$input-height: rem-calc(40);\n$input-font-size: $global-font-size;\n$input-padding-size: 0;\n$input-padding: 0 $input-padding-size;\n$input-line-height: rem-calc(26);\n\n////////////////////////////////////////////////////////////////////////////////\n/// Message\n////////////////////////////////////////////////////////////////////////////////\n$message-font-size: rem-calc(12);\n\n////////////////////////////////////////////////////////////////////////////////\n/// Checkbox\n////////////////////////////////////////////////////////////////////////////////\n$checkbox-size: rem-calc(28);\n$checkbox-element-size: $checkbox-size * 0.8;\n$checkbox-font-size: $global-font-size * 0.9;\n\n////////////////////////////////////////////////////////////////////////////////\n/// Radios\n////////////////////////////////////////////////////////////////////////////////\n$radio-size: rem-calc(28);\n$radio-element-size: rem-calc(23);\n$radio-font-size: $global-font-size * 0.9;\n\n////////////////////////////////////////////////////////////////////////////////\n/// Select\n////////////////////////////////////////////////////////////////////////////////\n$select-font-size: rem-calc(14);\n$select-item-height: $input-height;\n$select-optgroup-font-size: rem-calc(12);\n$select-optgroup-height: $input-height;\n","\n@use \"sass:math\";\n\n@import './unit';\n\n////\n/// @group breakpoints\n////\n\n/// A list of named breakpoints. You can use these with the `breakpoint()` mixin to quickly create media queries.\n/// @type Map\n$breakpoints: (\n  small: 0, // converted from \"0\"\n  medium: 40em, // converted from \"all and (min-width: 40em)\"\n  large: 64em, // converted from \"all and (min-width: 64em)\"\n  xlarge: 120em, // converted from \"all and (min-width: 120em)\"\n) !default;\n\n/// The largest named breakpoint in which to include print as a media type\n/// @type Keyword\n$print-breakpoint: large !default;\n\n$-zf-zero-breakpoint: small !default;\n\n$-zf-breakpoints-keys: map-keys($breakpoints);\n\n@if nth(map-values($breakpoints), 1) != 0 {\n  @error 'Your smallest breakpoint (defined in $breakpoints) must be set to \"0\".';\n}\n@else {\n  $-zf-zero-breakpoint: nth(map-keys($breakpoints), 1);\n}\n\n/// All of the names in this list will be output as classes in your CSS, like `.small-12`, `.medium-6`, and so on. Each value in this list must also be in the `$breakpoints` map.\n/// @type List\n$breakpoint-classes: (small medium large) !default;\n\n/// Generates a media query string matching the input value. Refer to the documentation for the `breakpoint()` mixin to see what the possible inputs are.\n///\n/// @param {Keyword|Number} $val [small] - Breakpoint name, or px, rem, or em value to process.\n@function breakpoint($val: $-zf-zero-breakpoint) {\n  // Size or keyword\n  $bp: nth($val, 1);\n  // Value for max-width media queries\n  $bp-max: 0;\n  // Direction of media query (up, down, or only)\n  $dir: if(length($val) > 1, nth($val, 2), up);\n  // Eventual output\n  $str: '';\n  // Is it a named media query?\n  $named: false;\n\n  // Orientation media queries have a unique syntax\n  @if $bp == 'landscape' or $bp == 'portrait' {\n    @return '(orientation: #{$bp})';\n  }\n  @else if $bp == 'retina' {\n    @return '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)';\n  }\n\n  // Try to pull a named breakpoint out of the $breakpoints map\n  @if type-of($bp) == 'string' {\n    @if map-has-key($breakpoints, $bp) {\n      @if $dir == 'only' or $dir == 'down' {\n        $bp-max: -zf-map-next($breakpoints, $bp);\n      }\n\n      $bp: map-get($breakpoints, $bp);\n      $named: true;\n    }\n    @else {\n      $bp: 0;\n      @warn 'breakpoint(): \"#{$val}\" is not defined in your $breakpoints setting.';\n    }\n  }\n\n  // Convert any pixel, rem, or unitless value to em\n  $bp: -zf-bp-to-em($bp);\n  @if $bp-max {\n    $bp-max: -zf-bp-to-em($bp-max) - math.div(1, 16);\n  }\n\n  // Conditions to skip media query creation\n  // - It's a named breakpoint that resolved to \"0 down\" or \"0 up\"\n  // - It's a numeric breakpoint that resolved to \"0 \" + anything\n  @if $bp > 0em or $dir == 'only' or $dir == 'down' {\n    // `only` ranges use the format `(min-width: n) and (max-width: n)`\n    @if $dir == 'only' {\n      // Only named media queries can have an \"only\" range\n      @if $named == true {\n        // Only use \"min-width\" if the floor is greater than 0\n        @if $bp > 0em {\n          $str: $str + '(min-width: #{$bp})';\n\n          // Only add \"and\" to the media query if there's a ceiling\n          @if $bp-max != null {\n            $str: $str + ' and ';\n          }\n        }\n\n        // Only use \"max-width\" if there's a ceiling\n        @if $bp-max != null {\n          $str: $str + '(max-width: #{$bp-max})';\n        }\n      }\n      @else {\n        @warn 'breakpoint(): Only named media queries can have an `only` range.';\n      }\n    }\n\n    // `down` ranges use the format `(max-width: n)`\n    @else if $dir == 'down' {\n      $max: if($named, $bp-max, $bp);\n\n      // Skip media query creation if input value is exactly \"0 down\",\n      // unless the function was called as \"small down\", in which case it's just \"small only\"\n      @if $named or $bp > 0em {\n        @if $max != null {\n          $str: $str + '(max-width: #{$max})';\n        }\n      }\n    }\n\n    // `up` ranges use the format `(min-width: n)`\n    @else if $bp > 0em {\n      $str: $str + '(min-width: #{$bp})';\n    }\n  }\n\n  @return $str;\n}\n\n/// Wraps a media query around the content you put inside the mixin. This mixin accepts a number of values:\n///  - If a string is passed, the mixin will look for it in the `$breakpoints` map, and use a media query there.\n///  - If a pixel value is passed, it will be converted to an em value using `$global-font-size` as the base.\n///  - If a rem value is passed, the unit will be changed to em.\n///  - If an em value is passed, the value will be used as-is.\n///\n/// @param {Keyword|Number} $value - Breakpoint name, or px, rem, or em value to process.\n///\n/// @output If the breakpoint is \"0px and larger\", outputs the content as-is. Otherwise, outputs the content wrapped in a media query.\n@mixin breakpoint($value) {\n  $str: breakpoint($value);\n  $bp: index($-zf-breakpoints-keys, $value);\n  $pbp: index($-zf-breakpoints-keys, $print-breakpoint);\n\n  $old-zf-size: null;\n\n  // Make breakpoint size available as a variable\n  @if global-variable-exists(-zf-size) {\n    $old-zf-size: $-zf-size;\n  }\n  $-zf-size: nth($value, 1) !global; // get the first value to account for `only` and `down` keywords\n\n  // If $str is still an empty string, no media query is needed\n  @if $str == '' {\n    @content;\n  }\n\n  // Otherwise, wrap the content in a media query\n  @else {\n    // For named breakpoints less than or equal to $print-breakpoint, add print to the media types\n    @if $bp != null and $bp <= $pbp {\n      @media print, screen and #{$str} {\n        @content;\n       }\n    }\n    @else {\n      @media screen and #{$str} {\n        @content;\n      }\n    }\n  }\n\n  @if $old-zf-size != null {\n    // Restore the old breakpoint size\n    $-zf-size: $old-zf-size !global;\n  } @else {\n    $-zf-size: null !global;\n  }\n}\n\n/// Convers the breakpoints map to a URL-encoded string, like this: `key1=value1&key2=value2`. The value is then dropped into the CSS for a special `<meta>` tag, which is read by the Foundation JavaScript. This is how we transfer values from Sass to JavaScript, so they can be defined in one place.\n/// @access private\n///\n/// @param {Map} $map - Map to convert.\n///\n/// @returns {String} A string containing the map's contents.\n@function -zf-bp-serialize($map) {\n  $str: '';\n  @each $key, $value in $map {\n    $str: $str + $key + '=' + -zf-bp-to-em($value) + '&';\n  }\n  $str: str-slice($str, 1, -2);\n\n  @return $str;\n}\n\n/// Find the next key in a map.\n/// @access private\n///\n/// @param {Map} $map - Map to traverse.\n/// @param {Mixed} $key - Key to use as a starting point.\n///\n/// @returns {Mixed} The value for the key after `$key`, if `$key` was found. If `$key` was not found, or `$key` was the last value in the map, returns `null`.\n@function -zf-map-next($map, $key) {\n\n  // Store the keys of the map as a list\n  $values: map-keys($map);\n\n  $i: 0;\n\n  // If the Key Exists, Get the index of the key within the map and add 1 to it for the next breakpoint in the map\n  @if (map-has-key($map, $key)) {\n    $i: index($values, $key) + 1;\n  }\n\n  // If the key doesn't exist, or it's the last key in the map, return null\n  @if ($i > length($map) or $i == 0) {\n    @return null;\n  }\n  // Otherwise, return the value\n  @else {\n    @return map-get($map, nth($values, $i));\n  }\n\n}\n\n/// Return a list of our named breakpoints less than $key. Useful for dealing with\n/// responsive gutters for the grid.\n/// @access private\n///\n/// @param {String} $key - Key to use as last breakpoint.\n///\n/// @returns {Array} The list of breakpoints up to and. If $key is auto, returns breakpoints above the zero\n@function -zf-breakpoints-less-than($key) {\n  $list: ();\n  $found_key: false;\n\n  @each $name in $-zf-breakpoints-keys {\n    @if ($name == $key) {\n      $found_key: true;\n    }\n    @if not $found_key {\n      $list: append($list, $name);\n    }\n  }\n  @return $list;\n}\n\n/// Return a list of our named breakpoints less than $key. Useful for dealing with\n/// responsive gutters for the grid.\n/// @access private\n///\n/// @param {String} $breakpoing - a named or non-named breakpoing.\n///\n/// @returns {Array} The list of breakpoints up to and. If $key is auto, returns breakpoints above the zero\n@function -zf-closest-named-breakpoint($breakpoint) {\n  $last: $-zf-zero-breakpoint;\n  $found: false;\n\n  $value: unitless-calc($breakpoint, 1px);\n  @each $key, $val in $breakpoints {\n    @if not $found {\n      @if unitless-calc($val) > $value {\n        $found: true;\n      } @else {\n        $last: $key;\n      }\n    }\n  }\n\n  @return $last;\n}\n\n/// Get a value for a breakpoint from a responsive config map or single value.\n/// - If the config is a single value, return it regardless of `$value`.\n/// - If the config is a map and has the key `$value`, the exact breakpoint value is returned.\n/// - If the config is a map and does *not* have the breakpoint, the value matching the next lowest breakpoint in the config map is returned.\n/// @access private\n///\n/// @param {Number|Map} $map - Responsive config map or single value.\n/// @param {Keyword} $value - Breakpoint name to use.\n///\n/// @return {Mixed} The corresponding breakpoint value.\n@function -zf-get-bp-val($map, $value) {\n  // If the given map is a single value, return it\n  @if type-of($map) == 'number' {\n    @return $map;\n  }\n\n\n  // Check if the breakpoint name exists globally\n  @if not map-has-key($breakpoints, $value) {\n    @if type-of($value) == 'number' {\n      $value: -zf-closest-named-breakpoint($value);\n    } @else {\n      @return null;\n    }\n  }\n  // Check if the breakpoint name exists in the local config map\n  @else if map-has-key($map, $value) {\n    // If it does, just return the value\n    @return map-get($map, $value);\n  }\n  // Otherwise, find the next lowest breakpoint and return that value\n  @else {\n    $anchor: null;\n    $found: false;\n\n    @each $key, $val in $breakpoints {\n      @if not $found {\n        @if map-has-key($map, $key) {\n          $anchor: $key;\n        }\n        @if $key == $value {\n          $found: true;\n        }\n      }\n    }\n\n    @return map-get($map, $anchor);\n  }\n}\n\n@if map-has-key($breakpoints, small) {\n  $small-up: screen;\n  $small-only: unquote('screen and #{breakpoint(small only)}');\n}\n\n@if map-has-key($breakpoints, medium) {\n  $medium-up: unquote('screen and #{breakpoint(medium)}');\n  $medium-only: unquote('screen and #{breakpoint(medium only)}');\n}\n\n@if map-has-key($breakpoints, large) {\n  $large-up: unquote('screen and #{breakpoint(large)}');\n  $large-only: unquote('screen and #{breakpoint(large only)}');\n}\n\n@if map-has-key($breakpoints, xlarge) {\n  $xlarge-up: unquote('screen and #{breakpoint(xlarge)}');\n  $xlarge-only: unquote('screen and #{breakpoint(xlarge only)}');\n}\n\n@if map-has-key($breakpoints, xxlarge) {\n  $xxlarge-up: unquote('screen and #{breakpoint(xxlarge)}');\n}\n","\n.ux-form {\n\n  .button,\n  .form-submit,\n  .form-submit.secondary {\n    margin-bottom: 1px;\n  }\n}\n","@use 'sass:math';\n\n.ux-form-element-type-checkboxes {\n\n  .ux-form-checkboxes {\n\n    .fieldset-wrapper > * {\n      margin-top: $global-margin * 0.25;\n    }\n  }\n}\n\n.ux-form-checkbox {\n  position: relative;\n\n  // Hide input.\n  .form-checkbox {\n    position: absolute;\n    left: -9999px;\n    opacity: 0;\n  }\n\n  .ux-ripple {\n    position: absolute;\n    top: (($checkbox-element-size * 0.5) * -1) + ($checkbox-size - $checkbox-element-size) * 0.5;\n    left: ($checkbox-element-size * 0.5) * -1;\n    width: $checkbox-element-size * 2;\n    height: $checkbox-element-size * 2;\n  }\n\n  label {\n\n    &.option {\n      display: inline-block;\n      position: relative;\n      height: $checkbox-size;\n      line-height: $checkbox-size;\n      padding: 0 0 0 $checkbox-element-size + rem-calc(5);\n      margin: 0;\n      cursor: pointer;\n      font-size: $checkbox-font-size;\n      user-select: none;\n      font-weight: normal;\n\n      &:before,\n      &:after {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: ($checkbox-size - $checkbox-element-size) * 0.5;\n        width: $checkbox-element-size;\n        height: $checkbox-element-size;\n        z-index: 2;\n        border: 2px solid transparent;\n        box-sizing: border-box;\n      }\n\n      &:before {\n        border-radius: 2px;\n      }\n\n      &:after {\n        top: math.div($checkbox-element-size, 7);\n        left: 0;\n        width: math.div($checkbox-element-size, 2.5);\n        height: math.div($checkbox-element-size, 1.2);\n        border-top: 2px solid transparent;\n        border-left: 2px solid transparent;\n        border-right: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n        transform: rotate(40deg) scale(0);\n        backface-visibility: hidden;\n        transform-origin: 100% 100%;\n        opacity: 0;\n      }\n    }\n\n    &:active {\n\n      .ux-ripple {\n        @include ux-ripple-active;\n      }\n    }\n  }\n\n  // Message area.\n  &:after {\n    display: block;\n    content: '';\n    font-size: $message-font-size;\n    line-height: $label-font-size;\n    text-transform: uppercase;\n    white-space: nowrap;\n    opacity: 0;\n    text-rendering: optimizeLegibility;\n  }\n\n  // When ready.\n  &.ready {\n\n    label {\n\n      &.option {\n\n        &:before,\n        &:after {\n          transition: all $global-speed ease;\n        }\n      }\n    }\n  }\n\n  // When focused.\n  &.focused {\n\n    label {\n\n      .ux-ripple {\n        @include ux-ripple-focus;\n\n        &:after {\n          border-radius: 3px;\n        }\n      }\n    }\n  }\n\n  // When active.\n  &.active {\n\n    label {\n\n      &.option {\n\n        &:after {\n          opacity: 1;\n          transform: rotate(40deg) scale(1);\n        }\n      }\n    }\n  }\n\n  // When invalid.\n  &.invalid,\n  &.invalid.focus {\n\n    &:after {\n      content: attr(data-error);\n      opacity: 1;\n      padding: rem-calc(2 10);\n    }\n  }\n\n  // When disabled.\n  &.form-disabled {\n\n    label {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n\n    .ux-ripple {\n      display: none;\n    }\n  }\n}\n\n.ux-form-checkboxes-inline {\n\n  .ux-form-checkbox {\n    display: inline-block;\n    padding-right: $global-padding * 0.5;\n  }\n}\n","\n.ux-form-date {\n\n  .ux-form-input-item {\n    cursor: text;\n  }\n}\n\n.ux-form-time {\n\n  .ux-form-element {\n    margin: 0;\n  }\n\n  .ux-form-input-item {\n    cursor: text;\n  }\n}\n\n.ux-form-datetime-inline {\n\n  .ux-form-date,\n  .ux-form-time {\n    display: inline-block;\n    padding-right: $global-padding * 0.5;\n  }\n}\n\n.picker {\n\n  select.picker__select--year,\n  select.picker__select--month {\n    font-size: inherit;\n    line-height: inherit;\n    appearance: menulist;\n    margin: 0 2px;\n    padding: 0;\n  }\n}\n","/* stylelint-disable selector-pseudo-class-no-unknown */\n.ux-form-element {\n\n  .entity-meta {\n    border: 1px solid red; /* stylelint-disable-line color-named */\n\n    .ux-form-element {\n      margin: 0;\n    }\n\n    details {\n      // border: 0;\n      background: transparent;\n\n      summary {\n        padding: 0;\n        text-shadow: 0;\n      }\n\n      .details-wrapper {\n        padding: $global-padding 0 0;\n      }\n\n      &:first-child {\n        border: 0;\n      }\n\n      &:open {\n        background-image: none !important; /* stylelint-disable-line declaration-no-important */\n      }\n    }\n  }\n}\n","/* stylelint-disable declaration-no-important */\n.ux-form-input {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: flex-end;\n  width: 100%;\n\n  // Flex break items so they are full-width.\n  > label,\n  > .description,\n  > .field-error,\n  .ux-form-input-line,\n  &:after {\n    flex-basis: 100%;\n  }\n\n  // Flex main area take up full width.\n  > .ux-form-input-item,\n  > .field-input,\n  > .counter {\n    flex: 1 1 10%;\n    width: auto;\n  }\n\n  .ux-form-input-item {\n    width: 100%;\n  }\n\n  // The line placed beneath input fields.\n  .ux-form-input-line {\n    display: block;\n    height: 2px;\n    background-size: 0 2px, 100% 1px;\n    background-repeat: no-repeat;\n    background-position: center bottom, center calc(100% - 1px);\n  }\n\n  .ux-form-input-item,\n  .field-prefix,\n  .field-suffix {\n    display: block;\n    box-shadow: none;\n    outline: none;\n    border: 0;\n    margin: 0;\n    height: $input-height;\n    line-height: $input-height;\n    font-size: $input-font-size;\n    padding: $input-padding;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &:focus,\n    &.form-textarea:focus {\n      outline: 0;\n      box-shadow: none;\n    }\n  }\n\n  &.has-prefix {\n\n    .ux-form-input-item {\n      border-left: 0 !important;\n      padding-left: 0 !important;\n    }\n  }\n\n  &.has-suffix {\n\n    .ux-form-input-item {\n      border-right: 0 !important;\n      padding-right: 0 !important;\n    }\n  }\n\n  .field-prefix {\n    padding-right: rem-calc(5) !important;\n    border-right: 0 !important;\n  }\n\n  .field-suffix {\n    padding-left: rem-calc(5) !important;\n    border-left: 0 !important;\n  }\n\n  textarea {\n\n    &.ux-form-input-item {\n      overflow: auto;\n\n      &,\n      &:focus {\n        padding-top: $input-line-height * 0.5;\n        padding-bottom: $input-line-height * 0.5;\n        line-height: $input-line-height;\n        height: auto;\n        min-height: $input-height;\n      }\n    }\n  }\n\n  .form-textarea-wrapper {\n    width: 100%;\n  }\n\n  // Message area.\n  &:after {\n    display: block;\n    content: '';\n    opacity: 0;\n    font-size: $message-font-size;\n    line-height: $label-font-size;\n    text-transform: uppercase;\n    z-index: 10;\n    text-rendering: optimizeLegibility;\n  }\n\n  // When ready.\n  &.ready {\n\n    > label,\n    > .field-prefix,\n    > .field-suffix,\n    .ux-form-input-line,\n    &:after {\n      transition: all $global-speed ease-out;\n    }\n  }\n\n  // When focused.\n  &.focus {\n\n    .ux-form-input-line {\n      background-size: 100% 2px, 100% 1px;\n    }\n  }\n\n  // When invalid.\n  &.invalid,\n  &.invalid.focus {\n\n    &:after {\n      content: attr(data-error);\n      opacity: 1;\n      padding: rem-calc(2 10);\n    }\n  }\n\n  // When disabled.\n  &.form-disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n}\n\n// Input labels can be floated above their input fields.\n.ux-form-element-float {\n\n  .ux-form-input {\n\n    > label {\n      @include label-overlay;\n    }\n\n    // Message area.\n    &:after {\n      top: $input-height + rem-calc(1);\n    }\n\n    &.active,\n    &.force-active {\n\n      > label {\n        @include label-float;\n      }\n    }\n  }\n}\n","\n.password-strength {\n\n  .password-strength__title {\n    @include description;\n    padding-top: 5px;\n    text-transform: uppercase;\n  }\n\n  .password-strength__text {\n    font-weight: 700;\n  }\n}\n",".ux-form-element-type-radios {\n\n  .ux-form-radios {\n\n    .fieldset-wrapper > * {\n      margin-top: $global-margin * 0.25;\n    }\n  }\n}\n\n.ux-form-radio {\n  position: relative;\n\n  // Hide input.\n  .form-radio {\n    position: absolute;\n    left: -9999px;\n    opacity: 0;\n  }\n\n  .ux-ripple {\n    position: absolute;\n    top: (($radio-element-size * 0.5) * -1) + ($radio-size - $radio-element-size) * 0.5;\n    left: ($radio-element-size * 0.5) * -1;\n    width: $radio-element-size * 2;\n    height: $radio-element-size * 2;\n  }\n\n  label {\n\n    &.option {\n      display: inline-block;\n      position: relative;\n      height: $radio-size;\n      line-height: $radio-size;\n      padding: 0 0 0 $radio-element-size + rem-calc(5);\n      margin: 0;\n      cursor: pointer;\n      font-size: $radio-font-size;\n      user-select: none;\n      font-weight: normal;\n\n      &:before,\n      &:after {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: ($radio-size - $radio-element-size) * 0.5;\n        width: $radio-element-size;\n        height: $radio-element-size;\n        z-index: 2;\n        border-radius: 50%;\n        border: 2px solid transparent;\n        box-sizing: border-box;\n        background-color: transparent;\n      }\n\n      &:after {\n        transform: scale(0);\n        border: 0;\n      }\n    }\n\n    &:active .ux-ripple {\n      @include ux-ripple-active;\n    }\n  }\n\n  // Message area.\n  &:after {\n    display: block;\n    content: '';\n    font-size: $message-font-size;\n    line-height: $label-font-size;\n    text-transform: uppercase;\n    white-space: nowrap;\n    opacity: 0;\n    text-rendering: optimizeLegibility;\n  }\n\n  // When ready.\n  &.ready {\n\n    label {\n\n      &.option {\n\n        &:before,\n        &:after {\n          transition: all $global-speed ease;\n        }\n      }\n    }\n  }\n\n  // When focused.\n  &.focused {\n\n    label {\n\n      .ux-ripple {\n        @include ux-ripple-focus;\n      }\n    }\n  }\n\n  // When active.\n  &.active {\n\n    label {\n\n      &.option {\n\n        &:after {\n          transform: scale(0.55);\n        }\n      }\n    }\n  }\n\n  // When invalid.\n  &.invalid,\n  &.invalid.focus {\n\n    &:after {\n      content: attr(data-error);\n      opacity: 1;\n      padding: rem-calc(2 10);\n    }\n  }\n\n  // When disabled.\n  &.form-disabled {\n\n    label {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n\n    .ux-ripple {\n      display: none;\n    }\n  }\n}\n\n.ux-form-radios-inline {\n\n  .ux-form-radio {\n    display: inline-block;\n    padding-right: $global-padding * 0.5;\n  }\n}\n",".ux-form-select {\n  position: relative;\n\n  select {\n    display: none;\n    width: 100%;\n    box-sizing: border-box;\n    border: 0;\n    border-bottom: 1px solid transparent;\n\n    &.browser-default {\n      display: block;\n    }\n  }\n\n  &.invalid {\n\n    select {\n      display: block;\n    }\n  }\n\n  .ux-form-input-item {\n    cursor: default;\n    text-overflow: ellipsis;\n  }\n\n  .ajax-progress {\n    position: absolute;\n    top: 0;\n    right: 0;\n    font-size: 12px;\n    padding: 0 10px 0 20px;\n    border-radius: 3px;\n    height: $input-height;\n    line-height: $input-height;\n\n    .throbber {\n      padding: 0 16px 0 0;\n    }\n  }\n\n  .ux-form-select-wrapper {\n    position: relative;\n\n    &:hover {\n\n      .ux-form-select-caret {\n        opacity: 1;\n      }\n    }\n  }\n\n  .ux-form-select-caret {\n    position: absolute;\n    right: 10px;\n    top: 0;\n    bottom: 0;\n    height: 10px;\n    margin: auto 0;\n    font-size: 10px;\n    line-height: 10px;\n    pointer-events: none;\n    opacity: 0.7;\n    transition: opacity 300ms;\n  }\n\n  .ux-form-select-hidden {\n    position: absolute;\n    left: -9999px;\n    opacity: 0;\n  }\n\n  .ux-form-select-scroll {\n    display: relative;\n    overflow-y: auto;\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n    min-width: 100px;\n    max-height: $select-item-height * 10;\n    will-change: width, height;\n\n    li {\n      display: block;\n      clear: both;\n      width: 100%;\n      text-align: left;\n      font-size: $select-font-size;\n      text-transform: none;\n      // transition: all $form-item-speed;\n\n      > span {\n        display: block;\n        padding: 0 $global-padding * 0.5;\n\n        > label {\n          font-size: $select-font-size;\n        }\n      }\n    }\n  }\n\n  .ux-form-select-dropdown {\n    position: absolute;\n    left: 0;\n    top: 0;\n    // right: 0;\n    min-width: 100%;\n    display: none;\n    opacity: 0;\n    z-index: 999;\n    margin: 0;\n    padding: 0;\n\n    .close {\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: $input-height;\n      height: $input-height;\n      font-size: $input-height * 0.7;\n      line-height: $input-height * 0.85;\n      vertical-align: middle;\n      text-align: center;\n      cursor: pointer;\n    }\n\n    .search {\n\n      input {\n        cursor: text;\n        padding-left: $global-padding * 0.5;\n        padding-right: $global-padding * 0.5;\n        width: 100%;\n        font-size: $select-font-size;\n      }\n    }\n\n    .optgroup {\n      font-size: $select-optgroup-font-size;\n      text-transform: uppercase;\n      border-top: 1px solid gray(10);\n\n      > span {\n        cursor: default;\n        line-height: $select-optgroup-height;\n        min-height: $select-optgroup-height;\n      }\n    }\n\n    .selector {\n      margin: 0;\n      white-space: nowrap;\n\n      &.selected {\n        overflow: hidden;\n      }\n\n      > span {\n        cursor: pointer;\n        line-height: $select-item-height;\n        min-height: $select-item-height;\n      }\n\n      &.hide {\n        max-height: 0;\n        transition-duration: 0;\n      }\n    }\n  }\n\n  // Message area.\n  &:after {\n    display: block;\n    content: '';\n    font-size: $message-font-size;\n    line-height: $label-font-size;\n    text-transform: uppercase;\n    white-space: nowrap;\n    opacity: 0;\n    text-rendering: optimizeLegibility;\n  }\n\n  &.active {\n\n    .ux-form-select-dropdown {\n      display: block;\n      opacity: 0;\n      transform: translate(0, 20%);\n      transition: opacity 300ms, transform 300ms;\n    }\n  }\n\n  &.animate {\n\n    .ux-form-select-dropdown {\n      opacity: 1;\n      transform: translate(0, 0);\n    }\n  }\n\n  // When disabled.\n  &.form-disabled {\n\n    .ux-form-select-wrapper {\n      opacity: 0.5;\n      cursor: not-allowed;\n\n      * {\n        pointer-events: none;\n      }\n    }\n  }\n}\n","\n////////////////////////////////////////////////////////////////////////////////\n/// Specific table elements\n////////////////////////////////////////////////////////////////////////////////\n.ux-form {\n\n  .tabledrag-toggle-weight-wrapper {\n    position: absolute;\n    top: $global-padding;\n    right: $global-padding;\n    font-size: rem-calc(10);\n\n    button {\n      text-transform: uppercase;\n    }\n  }\n\n  .draggable {\n\n    .tabledrag-handle {\n      height: rem-calc(30);\n      float: none;\n      margin: 0;\n      display: block;\n\n      .handle {\n        margin: 0;\n        padding: 0;\n        width: rem-calc(30);\n        height: rem-calc(30);\n        background-position: center center;\n      }\n    }\n  }\n\n  .field-add-more-submit {\n    margin-top: 0 !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  table {\n\n    .ux-form-element {\n      margin: 0;\n    }\n  }\n}\n","\n.ux-form-element-type-text-format {\n\n  .ux-form-element {\n    margin: 0;\n  }\n\n  .ux-filter-wrapper {\n    border: 0;\n    margin: 0;\n    padding: 0;\n    overflow: visible;\n  }\n}\n","\n.ux-form-wrapper {\n\n  > .ux-form-element-inner {\n    padding: $global-padding;\n  }\n\n  .details-wrapper {\n    padding: 0;\n  }\n\n  summary,\n  fieldset:not(.fieldgroup) .fieldset-legend {\n    @include wrapper-label;\n  }\n\n  .ux-form-element-wrapper-description {\n    @include wrapper-description;\n  }\n}\n\n.ux-form-element-type-details {\n\n  details {\n    display: block;\n    border: 0;\n    margin: 0;\n    padding: 0;\n  }\n}\n\n.ux-form-element-type-fieldset {\n\n  fieldset:not(.fieldgroup) {\n    display: block;\n    border: 0;\n    margin: 0;\n    padding: 0;\n\n    > legend {\n      position: relative;\n      top: 0;\n    }\n  }\n\n  legend {\n    margin: 0;\n  }\n\n  .no-legend {\n\n    > legend {\n      display: none;\n    }\n  }\n\n  .fieldset-wrapper {\n\n    > .description {\n      margin: 0;\n      padding: 0;\n    }\n\n    > .ux-form-element {\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    // Some items are not handled by the ux module and as a result we want\n    // to give them global margin.\n    > * {\n      margin-top: $global-margin;\n      margin-bottom: $global-margin;\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  .field-group-fieldset:not(.fieldgroup) {\n    // margin-bottom: $global-margin * -1;\n    // background: red;\n\n    &.no-legend {\n      margin-top: $global-margin * -1;\n    }\n  }\n}\n\n.ux-form-container-hide {\n  display: none;\n}\n","/* stylelint-disable selector-max-id */\n.ux-form.commerce-checkout-flow {\n\n  #edit-login {\n    display: flex;\n    overflow: visible;\n\n    > .ux-form-container {\n      width: 50%;\n\n      &:first-child {\n        margin-right: $global-margin * 0.5;\n      }\n\n      &:last-child {\n        margin-left: $global-margin * 0.5;\n      }\n    }\n  }\n\n  .form-wrapper__guest-checkout,\n  .form-wrapper__login-option {\n    width: auto;\n    float: none;\n  }\n}\n","\n.ux-form-element .field--type-address,\n.ux-form-element .field--type-address3 {\n\n  details > div {\n\n    &:last-child {\n      margin-top: $global-margin;\n    }\n  }\n\n  .country-code {\n    margin-bottom: $global-margin * 2;\n  }\n\n  .ux-form-element-name-address-line1 {\n    margin-bottom: 0;\n  }\n\n  .ux-form-element-name-address-line2 {\n    margin: 0;\n  }\n\n  .ux-form-element-name-address-line3 {\n    margin: 0;\n  }\n\n  .postal-code {\n\n    &:after {\n      display: none;\n    }\n  }\n\n  .address-container-inline {\n    display: flex;\n\n    > .ux-form-element {\n      flex-grow: 1;\n      flex-shrink: 1;\n      flex-basis: 25%;\n      margin: 0;\n      padding: 0 $global-padding * 0.5;\n\n      &:first-child {\n        flex-basis: 50%;\n        padding-left: 0;\n      }\n\n      &:last-child {\n        padding-right: 0;\n        width: 20%;\n      }\n    }\n  }\n}\n","\n.ux-form-element .field--type-double-field {\n\n  .double-field-elements {\n    display: flex;\n\n    > div {\n      flex-basis: 50%;\n      padding-top: $global-padding * 0.5;\n    }\n  }\n}\n","/* stylelint-disable selector-max-id */\n#escort {\n\n  .escort-region-after .views-exposed-form {\n\n    .ux-form-element {\n      margin-top: 0;\n    }\n\n    .ux-form-input-line {\n      display: none;\n    }\n\n    .form-item {\n      display: block;\n      max-width: 100%;\n      margin: 0;\n    }\n  }\n}\n","\n.ux-form-element .field--type-fieldception {\n\n  .field-multiple-table {\n\n    tbody {\n\n      tr {\n\n        td {\n          border-top: 1px solid red; /* stylelint-disable-line color-named */\n          padding-top: $global-padding;\n          padding-bottom: $global-padding;\n        }\n\n        .fieldception-multiple {\n          display: flex;\n          align-items: flex-end;\n          flex-wrap: wrap;\n\n          .ux-form-container-ux-form-inline {\n            width: 100%;\n          }\n        }\n\n        // Only hide labels for fields without grouping.\n        .fieldception-groups-0 {\n\n          .ux-form-inline {\n\n            label {\n              display: none;\n            }\n\n            .description {\n              display: none;\n            }\n          }\n        }\n\n        &:first-child {\n\n          td {\n            padding-top: 0;\n            border-top: 0 !important; /* stylelint-disable-line declaration-no-important */\n          }\n\n          .fieldception-group {\n\n            // The first row and the first group in that row.\n            &:first-child {\n              border-top: 0;\n              margin-top: $global-margin * 0.5;\n              padding-top: 0;\n            }\n          }\n\n          .fieldception-groups-0 {\n\n            .ux-form-inline {\n\n              label {\n                display: block;\n              }\n            }\n          }\n        }\n\n        &:last-child {\n\n          td {\n            padding-bottom: 0;\n          }\n        }\n      }\n    }\n  }\n\n  .ux-form-element-type-actions {\n    width: 100%;\n\n    .close {\n      width: 100%;\n      padding: 4px;\n      font-size: rem-calc(12);\n      text-transform: uppercase;\n    }\n  }\n}\n"]}